version: '3.4'
services:
  loki:
    container_name: loki
    image: 'grafana/loki'
    volumes:
      - loki-data:/loki
  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - "./grafana:/var/lib/grafana"
      - "./config/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro"
      - "./dashboards/cluster.json:/var/lib/grafana/dashboards/cluster.json:ro"
      - "./dashboards/home-kubernetes-integration.json:/var/lib/grafana/dashboards/home-kubernetes-integration.json:ro"
      - "./dashboards/efficiency.json:/var/lib/grafana/dashboards/efficiency.json:ro"
      - "./dashboards/multi-cluster.json:/var/lib/grafana/dashboards/multi-cluster.json:ro"
      - "./dashboards/namespace-pods.json:/var/lib/grafana/dashboards/namespace-pods.json:ro"
      - "./dashboards/namespace-workloads.json:/var/lib/grafana/dashboards/namespace-workloads.json:ro"
      - "./dashboards/node-pods.json:/var/lib/grafana/dashboards/node-pods.json:ro"
      - "./dashboards/pod.json:/var/lib/grafana/dashboards/pod.json:ro"
      - "./dashboards/pv.json:/var/lib/grafana/dashboards/pv.json:ro"
      - "./dashboards/workload.json:/var/lib/grafana/dashboards/workload.json:ro"
      - "./dashboards/kubelet.json:/var/lib/grafana/dashboards/kubelet.json:ro"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_RENDERER_PLUGIN_TZ=UTC
      - GF_USERS_DEFAULT_THEME=light
    #  - GF_INSTALL_PLUGINS=grafana-clock-panel

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      # - --web.config.file=/etc/prometheus/web.yaml
      - --log.level=error
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./config/rules.yaml:/etc/prometheus/rules.yaml
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"

  load-balancer:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
      - "loki"
    ports:
      - "9009:9009"
      - "9010:9010"

  mimir-1:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-1-data:/data

  mimir-2:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-2-data:/data

  mimir-3:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-3
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-3-data:/data

volumes:
  mimir-1-data:
  mimir-2-data:
  mimir-3-data:
  minio-data:
  loki-data:
